#!/usr/bin/env node

// == Imports ===============================================================

const fs = require('fs');
const Linode = require('../lib/linodeius');

const program = require('commander');

// == Local Constants =======================================================

const version = require('../package.json').version;

// == Main ==================================================================

program
  .version(version)
  .option('-k --api-key <api_key>', 'Path to Linode API key');

program
  .command('key')
  .description('Show API key being used')
  .action(function() {
    var api = new Linode(program.apiKey);

    console.log(api.apiKey);
  });

program
  .command('api_version')
  .description('Show API version being used')
  .action(function() {
    var api = new Linode(program.apiKey);

    api.then(function() {
      console.log('API Version: ' + api.version);
    });
  })

program
  .command('list')
  .description('Lists available commands')
  .action(function() {
    var api = new Linode(program.apiKey);

    api.then(function() {
      Object.keys(api.methods).sort().forEach(function(method) {
        console.log(method);
      });
    });
  });

program
  .command('*')
  .description('Execute arbitrary Linode API call')
  .option('-h, --help', 'Help about this command')
  .action(function(cmd) {
    var api = new Linode(program.apiKey);

    // FIX: Warn on invalid command, cmd does not exist
    api.call(cmd).then(function(response) {
      console.log('Response:');
      console.log(JSON.stringify(response, null, 2));
    }).catch(function(err) {
      console.log('Error:');
      console.log(err);
    });
  })

program.parse(process.argv);
