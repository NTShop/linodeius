#!/usr/bin/env node

// == Imports ===============================================================

const fs = require('fs');
const Linode = require('../lib/linodeius');

const program = require('commander');

// == Local Constants =======================================================

const version = require('../package.json').version;

// == Support Functions =====================================================

function apiKey(keyPath) {
  var apiKey;

  if (keyPath) {
    return fs.readFileSync(keyPath).toString();
  }

  return process.env['LINODE_API_KEY'];
}

// == Main ==================================================================

program
  .version(version)
  .option('-k --api-key <api_key>', 'Path to Linode API key');

program
  .command('list')
  .description('Lists available commands')
  .action(function() {
    Linode.methods().forEach(function(method) {
      console.log(method);
    })
  });

program
  .command('*')
  .description('Execute arbitrary Linode API call')
  .option('-h, --help', 'Help about this command')
  .action(function(cmd) {
    var linode = new Linode(apiKey(program.apiKey));

    // FIX: Warn on invalid command, linode[cmd] does not exist
    linode[cmd]().then(function(response) {
      console.log('Response:');
      console.log(response);
    }).catch(function(err) {
      console.log('Error:');
      console.log(err);
    });
  })

program.parse(process.argv);
